{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === item.id);\n    },\n    deleteItemFromCart(state) {}\n  }\n});\n\n//exported actions of the ui slice\nexport const cartActions = cartSlice.actions;\n//exported slice\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","deleteItemFromCart","cartActions","actions"],"sources":["/home/terrero/Documents/2- Web Development/Frontend/React-Next/redux-sideeffects/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n   \n  },\n  reducers: {\n  addItemToCart(state, action){\n    const newItem = action.payload\nconst  existingItem = state.items.find(item => item.id===item.id)\n  },\n deleteItemFromCart(state){}\n  },\n});\n\n//exported actions of the ui slice\nexport const cartActions = cartSlice.actions;\n//exported slice\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EAEjB,CAAC;EACDC,QAAQ,EAAE;IACVC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAC;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAClC,MAAOC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAGD,IAAI,CAACC,EAAE,CAAC;IAC/D,CAAC;IACFC,kBAAkBA,CAACR,KAAK,EAAC,CAAC;EACzB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMS,WAAW,GAAGhB,SAAS,CAACiB,OAAO;AAC5C;AACA,eAAejB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}