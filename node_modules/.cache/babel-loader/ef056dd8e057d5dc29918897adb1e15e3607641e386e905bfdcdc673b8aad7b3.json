{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      const existing = state.items.filter(item => item.id === newItem.id);\n      state.totalQuantity++; //to add a quantity once this method is triggered\n      console.log(existing);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.totalPrice,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--; //to substract a quantity once this method is triggered\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\n//exported actions of the ui slice\nexport const cartActions = cartSlice.actions;\n//exported slice\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","existing","filter","console","log","push","price","quantity","totalPrice","title","removeItemFromCart","cartActions","actions"],"sources":["/home/terrero/Documents/2- Web Development/Frontend/React-Next/redux-sideeffects/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      const existing = state.items.filter((item) => item.id === newItem.id);\n      state.totalQuantity++  //to add a quantity once this method is triggered\n      console.log(existing)\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity:1, \n          totalPrice: newItem.totalPrice,\n          name: newItem.title,\n        });\n   \n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n        state.totalQuantity-- //to substract a quantity once this method is triggered\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price\n      }\n    },\n  },\n});\n\n//exported actions of the ui slice\nexport const cartActions = cartSlice.actions;\n//exported slice\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,MAAMC,QAAQ,GAAGR,KAAK,CAACJ,KAAK,CAACa,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrEP,KAAK,CAACH,aAAa,EAAE,EAAE;MACvBa,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,IAAI,CAACJ,YAAY,EAAE;QACjBJ,KAAK,CAACJ,KAAK,CAACgB,IAAI,CAAC;UACfL,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdM,KAAK,EAAEX,OAAO,CAACW,KAAK;UACpBC,QAAQ,EAAC,CAAC;UACVC,UAAU,EAAEb,OAAO,CAACa,UAAU;UAC9BrB,IAAI,EAAEQ,OAAO,CAACc;QAChB,CAAC,CAAC;MAEJ,CAAC,MAAM;QACLZ,YAAY,CAACU,QAAQ,EAAE;QACvBV,YAAY,CAACW,UAAU,GAAGX,YAAY,CAACW,UAAU,GAAGb,OAAO,CAACW,KAAK;MACnE;IACF,CAAC;IACDI,kBAAkBA,CAACjB,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DP,KAAK,CAACH,aAAa,EAAE,EAAC;MACxB,IAAIO,YAAY,CAACU,QAAQ,KAAK,CAAC,EAAE;QAC/Bd,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACa,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACU,QAAQ,EAAE;QACvBV,YAAY,CAACW,UAAU,GAAGX,YAAY,CAACW,UAAU,GAAGX,YAAY,CAACS,KAAK;MACxE;IACF;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,WAAW,GAAGzB,SAAS,CAAC0B,OAAO;AAC5C;AACA,eAAe1B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}